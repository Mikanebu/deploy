---

- name: Deploy zappa application.
  command: "{{ virtualenv_path }}/exec zappa deploy {{environment_tier}} -s {{ zappa_config_dir }}/{{ item }}_{{zappa_conf_file}} --json chdir={{ dpr_api_path }}"
  register: zappa_deploy
  failed_when: "'already deployed' in zappa_deploy.stderr"
  ignore_errors: True

- debug:
    msg: "{{ zappa_deploy }}"
  when: "{{app_debug}} == True"

- name: Update zappa application. As it is already deployed
  command: "{{ virtualenv_path }}/exec zappa update {{environment_tier}} -s {{ zappa_config_dir }}/{{ item }}_{{zappa_conf_file}} --json chdir={{ dpr_api_path }}"
  register: zappa_update
  when: zappa_deploy|failed

- debug:
    msg: "{{ zappa_update }}"
  when:
    - zappa_deploy|failed
    - "{{app_debug}} == True"

- name: Zappa status
  command: "{{ virtualenv_path }}/bin/zappa status {{environment_tier}} -s {{ zappa_config_dir }}/{{ item }}_{{zappa_conf_file}} --json"
  register: zappa_status

- set_fact:
    zappa_status_json: "{{ zappa_status.stdout|from_json }}"

- debug:
    msg: "{{ zappa_status_json }}"
  when:
    - "{{app_debug}} == True"
